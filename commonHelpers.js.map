{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/reneder-fanctions.js","../src/main.js"],"sourcesContent":["// функції для HTTP-запитів\n\nconst URL = 'https://pixabay.com/api/';\nconst API_KEY = '42600049-cf2a2f9bce39b2068dfff6d8c';\nfunction getImages(query) {\n  const queryUser = new URLSearchParams({\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 9,\n  });\n\n  return fetch(`${URL}?key=${API_KEY}&${queryUser}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n      return res.json();\n    })\n    .catch(err => console.log(err));\n}\n\nexport default { getImages };\n","// функції для відображення елементів інтерфейсу\n\nexport function renderImage(images) {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class ='gallery-item'>\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img class=\"gallery-image\"\n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n                width=\"360\"/>\n        </a>\n        <div class='image-info'>\n            <div class=\"info\">\n                <h3 class = \"info-likes\">Likes</h3>\n                <p>${likes}</p>\n            </div>\n            <div class=\"info\">\n                <h3 class = \"info-views\">Views</h3>\n                <p>${views}</p>\n            </div>\n            <div class=\"info\">\n                <h3 class = \"info-comments\">Comments</h3>\n                <p>${comments}</p>\n            </div>\n            <div class=\"info\">\n                <h3 class = \"info-downloads\">Downloads</h3>\n                <p>${downloads}</p>\n            </div>\n        </div>\n    </li>`\n    )\n    .join('');\n}\n","// вся логіка роботи додатка\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport API from './js/pixabay-api';\nimport { renderImage } from './js/reneder-fanctions';\n\nconst lightbox = new SimpleLightbox('.gallery-item a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// отримання refs\nconst refs = {\n  form: document.getElementById('form'),\n  searchInput: document.getElementById('input'),\n  loader: document.getElementsByClassName('loader'),\n  gallery: document.getElementById('gallery'),\n};\n\n// вішаємо слухач подій на submit форму\nrefs.form.addEventListener('submit', onSubmit);\n\n//отримання запиту з інпуту і передаємо його у вигляді квері параметру на сервер\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const form = evt.currentTarget;\n  const value = form.elements.input.value.trim();\n\n  // якщо інпут не заповнений, інформувати користувача\n  if (value === '') {\n    iziToast.warning({\n      message: 'Please enter a search query',\n      messageColor: 'black',\n      backgroundColor: '#ffac26',\n      position: 'topRight',\n      pauseOnHover: false,\n      progressBarColor: 'black',\n      timeout: 3000,\n    });\n    return;\n  }\n\n  API.getImages(value)\n    .then(({ hits }) => {\n      console.log(hits);\n      if (hits.length === 0) {\n        onError();\n      }\n      return renderImage(hits);\n    })\n    .then(updateMarkup)\n    .catch(onError);\n}\n\nfunction updateMarkup(markup) {\n  refs.gallery.innerHTML = markup;\n}\n\n// якщо негативна відповідь, інформувати користувача\nfunction onError(err) {\n  console.log(err);\n  iziToast.error({\n    theme: 'dark',\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n    messageColor: '#ffffff',\n    backgroundColor: '#ef4040',\n    position: 'topRight',\n    pauseOnHover: false,\n    progressBarColor: '#b51b1b',\n    timeout: 3000,\n  });\n}\n"],"names":["URL","API_KEY","getImages","query","queryUser","res","err","API","renderImage","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","refs","onSubmit","evt","value","iziToast","hits","onError","updateMarkup","markup"],"mappings":"6vBAEA,MAAMA,EAAM,2BACNC,EAAU,qCAChB,SAASC,EAAUC,EAAO,CACxB,MAAMC,EAAY,IAAI,gBAAgB,CACpC,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,CACd,CAAG,EAED,OAAO,MAAM,GAAGH,CAAG,QAAQC,CAAO,IAAIG,CAAS,EAAE,EAC9C,KAAKC,GAAO,CACX,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACjB,CAAK,EACA,MAAMC,GAAO,QAAQ,IAAIA,CAAG,CAAC,CAClC,CAEA,MAAeC,EAAA,CAAE,UAAAL,CAAW,ECrBrB,SAASM,EAAYC,EAAQ,CAClC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,wCACgCL,CAAa;AAAA;AAAA,uBAE9BD,CAAY;AAAA,uBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMNC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qBAIRC,CAAS;AAAA;AAAA;AAAA,UAIzB,EACA,KAAK,EAAE,CACZ,CC/BiB,IAAIC,EAAe,kBAAmB,CACrD,aAAc,MACd,aAAc,GAChB,CAAC,EAGD,MAAMC,EAAO,CACX,KAAM,SAAS,eAAe,MAAM,EACpC,YAAa,SAAS,eAAe,OAAO,EAC5C,OAAQ,SAAS,uBAAuB,QAAQ,EAChD,QAAS,SAAS,eAAe,SAAS,CAC5C,EAGAA,EAAK,KAAK,iBAAiB,SAAUC,CAAQ,EAG7C,SAASA,EAASC,EAAK,CACrBA,EAAI,eAAc,EAElB,MAAMC,EADOD,EAAI,cACE,SAAS,MAAM,MAAM,OAGxC,GAAIC,IAAU,GAAI,CAChBC,EAAS,QAAQ,CACf,QAAS,8BACT,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,iBAAkB,QAClB,QAAS,GACf,CAAK,EACD,MACD,CAEDf,EAAI,UAAUc,CAAK,EAChB,KAAK,CAAC,CAAE,KAAAE,MACP,QAAQ,IAAIA,CAAI,EACZA,EAAK,SAAW,GAClBC,IAEKhB,EAAYe,CAAI,EACxB,EACA,KAAKE,CAAY,EACjB,MAAMD,CAAO,CAClB,CAEA,SAASC,EAAaC,EAAQ,CAC5BR,EAAK,QAAQ,UAAYQ,CAC3B,CAGA,SAASF,EAAQlB,EAAK,CACpB,QAAQ,IAAIA,CAAG,EACfgB,EAAS,MAAM,CACb,MAAO,OACP,QACE,2EACF,aAAc,UACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,iBAAkB,UAClB,QAAS,GACb,CAAG,CACH"}